dup2 -- duplicates an existing file descriptor by taking in the value of the new descriptor as well as that of the old and returning either the new descriptor or deallocating it first

creat -- creates a new file by taking in the pathname of the file and the access permission bits

pipe -- creates an I/O channel that allows data to be written into one end and read from the other end to facilitate communication of one process with another process, thread, or potentially itself

fork -- creates a new process (child) that is an exact copy of the calling process (parent) and returns a value of 0 to the child and the PID of the child to the parent upon successful completion or a value of -1 to the parent otherwise

pthread_create -- creates a new thread within a process with attributes specified by attr and returns zero if successful or an error number otherwise

system -- takes a command as an argument and passes it to the command interpreter sh(1), returning a non-zero value if the command interpreter sh(1) is available or zero otherwise if the argument is a NULL pointer

printf -- formats and prints its arguments, exiting 0 upon success or > 0 if an error occurs


The last line of the function `invokeCmd` in the file `shell.cpp` is `(*cmdTable[k].func) (arg);`. This line makes a call to a function in the `cmdTable` depending on the value of `k` and also gives it the arguments it needs to execute.
